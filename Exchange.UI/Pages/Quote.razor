@page "/quote"
@inject HttpClient _httpClient
@inject IToastService _toastService

<h3>@pageTitle</h3>

@if (exchangeRateList == null || exchangeRateList.Count  == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Exchange Buy</th>
                <th>Exchange Sale</th>
                <th>Exchange Date</th>
                <th>Currency</th>
            </tr>
        </thead>
        <tbody>
            @for(int i = 0; i < exchangeRateList.Count; i++)
            {
                <tr>
                    <td>@exchangeRateList[i].Data.Buy.ToString("C")</td>
                    <td>@exchangeRateList[i].Data.Sale.ToString("C")</td>
                    <td>@exchangeRateList[i].Data.DateUpdate</td>
                    <td>@Constants.Currencies[i]</td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <button @onclick="RefreshExchangeRate" class="btn btn-danger">
            <span class="oi oi-reload"></span>
            Refresh Rates
        </button>
    </div>
}
@if (!isSuccess)
{
    _toastService.ShowError("Something went wrong getting rates");
}

@code {
    [Parameter]
    public string pageTitle { get; set; } = "Exchange Rate";

    private IList<GenericResponse<RateResponse>> exchangeRateList = new List<GenericResponse<RateResponse>>();
    private bool isSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        await GetRates();
    }

    private async Task RefreshExchangeRate()
    {
        exchangeRateList.Clear();
        await GetRates();
    }

    private async Task GetRates()
    {

        foreach (var currency in Constants.Currencies)
        {
            var request = new HttpRequestMessage(HttpMethod.Get, $"{Constants.ExchangeRateEndpoint}{currency}");
            var response = await _httpClient.SendAsync(request);


            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                var content = await response.Content.ReadAsStringAsync();
                exchangeRateList.Add(JsonConvert.DeserializeObject<GenericResponse<RateResponse>>(content));
            }
            else
                isSuccess = false;
        }
    }
}
